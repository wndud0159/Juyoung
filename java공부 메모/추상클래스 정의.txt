//추상클래스 정의
//객체를 생성할 수 없다(new 연산자를 통해 객체를 생성 불가)
//몸체{}가 없는 메소드를 가질수있다.
//내 생각은 추상클래스는 상속을해서 쓰기위해 있는거 같다.
//저 show 메소드가 서브클래스에 없다면 상속받기 불가함
abstract class Vehicle{
	protected int speed;
	public void setSpeed(int speed) {
		this.speed = speed;
		System.out.println("속도를 " + speed + "로 변경했습니다.");
	}
	abstract void show(); //이 메소드는 몸체{}가 없다 추상메소드
}


class Car extends Vehicle{ // 상속을 받아도 show메소드가 없다면 오류가뜸
	private int num;
	private double gas;
	
	public Car(int num, double gas) {
		this.num = num;
		this.gas = gas;
		System.out.println("차량번호 " + num + "\n연료양 " + gas + "인 자동차가 만들어졌습니다.");
	}
	public void show() { // 추상클래스 상속받기위해 show메소드 완성
		System.out.println("차량번호 " + num + "\n연료양 " + gas + "\n 속도는 " + speed);
	}
}


class Plane extends Vehicle{
	private int flight;
	
	public Plane(int flight) {
		this.flight = flight;
		System.out.println("비행기 번호가" + flight + "인 비행기가 만들어졌습니다.");
	}
	public void show() { // 추상클래스 상속받기위해 show메소드 완성
		System.out.println("비행기번호 " + flight + "\n속도는 " + speed);
	}
}

public class Test{
	public static void main(String[] args) {
		Vehicle[] vc = new Vehicle[2]; // 객체생성은 못해도 클래스배열은 생성가능
		
		vc[0] = new Car(1234, 20.5); //car 클래스 객체 
		vc[0].setSpeed(50);
		vc[1] = new Plane(232); //Plane 클래스 객체
		vc[1].setSpeed(500);
		
		for (int i = 0; i < vc.length; i++) {
			vc[i].show();
		}
	
	}
}
//출력결과
//차량번호 1234
//연료양 20.5인 자동차가 만들어졌습니다.
//속도를 50로 변경했습니다.
//비행기 번호가232인 비행기가 만들어졌습니다.
//속도를 500로 변경했습니다.
//차량번호 1234
//연료양 20.5
// 속도는 50  
//비행기번호 232
//속도는 500
//각 객체에 연결된 show() 메소드가 호출되었습니다.